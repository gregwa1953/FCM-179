#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.3
#  in conjunction with Tcl version 8.6
#    Mar 04, 2022 10:31:54 AM CST  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import demo1_support

class Main:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("914x730+741+341")
        top.minsize(1, 1)
        top.maxsize(4225, 1410)
        top.resizable(0,  0)
        top.title("Demo 1")
        top.configure(highlightcolor="black")

        self.top = top
        self.CheckDisplay = tk.StringVar()
        self.RadioDisplay = tk.StringVar()
        self.che47 = tk.IntVar()
        self.che48 = tk.IntVar()
        self.che49 = tk.IntVar()
        self.che50 = tk.IntVar()
        self.selectedButton = tk.IntVar()
        self.selectedButton2 = tk.IntVar()

        self.Labelframe1 = tk.LabelFrame(self.top)
        self.Labelframe1.place(x=30, y=30, height=285, width=370)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.Labelframe1.configure(labelanchor="n")
        self.Labelframe1.configure(text='''Checkbuttons''')

        self.Checkbutton1 = tk.Checkbutton(self.Labelframe1)
        self.Checkbutton1.place(x=30, y=50, height=33, width=187
                , bordermode='ignore')
        self.Checkbutton1.configure(activebackground="#f9f9f9")
        self.Checkbutton1.configure(anchor='w')
        self.Checkbutton1.configure(command=demo1_support.on_chkbtnClick)
        self.Checkbutton1.configure(compound='left')
        self.Checkbutton1.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.Checkbutton1.configure(justify='left')
        self.Checkbutton1.configure(text='''Check 1''')
        self.Checkbutton1.configure(variable=self.che47)

        self.Checkbutton2 = tk.Checkbutton(self.Labelframe1)
        self.Checkbutton2.place(x=30, y=80, height=33, width=187
                , bordermode='ignore')
        self.Checkbutton2.configure(activebackground="#f9f9f9")
        self.Checkbutton2.configure(anchor='w')
        self.Checkbutton2.configure(command=demo1_support.on_chkbtnClick)
        self.Checkbutton2.configure(compound='left')
        self.Checkbutton2.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.Checkbutton2.configure(justify='left')
        self.Checkbutton2.configure(text='''Check 2''')
        self.Checkbutton2.configure(variable=self.che48)

        self.Checkbutton3 = tk.Checkbutton(self.Labelframe1)
        self.Checkbutton3.place(x=30, y=120, height=33, width=79
                , bordermode='ignore')
        self.Checkbutton3.configure(activebackground="#f9f9f9")
        self.Checkbutton3.configure(anchor='w')
        self.Checkbutton3.configure(command=demo1_support.on_chkbtnClick)
        self.Checkbutton3.configure(compound='left')
        self.Checkbutton3.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        photo_location = "./images/switchoff75.png"
        global _img0
        _img0 = tk.PhotoImage(file=photo_location)
        self.Checkbutton3.configure(image=_img0)
        self.Checkbutton3.configure(indicatoron="0")
        self.Checkbutton3.configure(justify='left')
        photo_location = "./images/switchon75.png"
        global _img1
        _img1 = tk.PhotoImage(file=photo_location)
        self.Checkbutton3.configure(selectimage=_img1)
        self.Checkbutton3.configure(variable=self.che49)

        self.Checkbutton4 = tk.Checkbutton(self.Labelframe1)
        self.Checkbutton4.place(x=30, y=160, height=33, width=187
                , bordermode='ignore')
        self.Checkbutton4.configure(activebackground="coral")
        self.Checkbutton4.configure(background="coral")
        self.Checkbutton4.configure(command=demo1_support.on_chkbtnClick)
        self.Checkbutton4.configure(compound='left')
        self.Checkbutton4.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.Checkbutton4.configure(indicatoron="0")
        self.Checkbutton4.configure(justify='left')
        self.Checkbutton4.configure(selectcolor="limegreen")
        self.Checkbutton4.configure(text='''Sticky Button''')
        self.Checkbutton4.configure(variable=self.che50)

        self.Label1 = tk.Label(self.Labelframe1)
        self.Label1.place(x=10, y=230, height=41, width=349, bordermode='ignore')

        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(borderwidth="2")
        self.Label1.configure(compound='left')
        self.Label1.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.Label1.configure(relief="groove")
        self.Label1.configure(text='''Label''')
        self.Label1.configure(textvariable=self.CheckDisplay)
        self.CheckDisplay.set('''Label''')

        self.Labelframe2 = tk.LabelFrame(self.top)
        self.Labelframe2.place(x=400, y=30, height=285, width=370)
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.Labelframe2.configure(labelanchor="n")
        self.Labelframe2.configure(text='''Radiobuttons''')

        self.Radiobutton1 = tk.Radiobutton(self.Labelframe2)
        self.Radiobutton1.place(x=40, y=40, height=23, width=238
                , bordermode='ignore')
        self.Radiobutton1.configure(activebackground="#f9f9f9")
        self.Radiobutton1.configure(anchor='w')
        self.Radiobutton1.configure(command=demo1_support.on_rbtnClick1)
        self.Radiobutton1.configure(compound='left')
        self.Radiobutton1.configure(justify='left')
        self.Radiobutton1.configure(text='''Radio 1''')
        self.Radiobutton1.configure(value='1')
        self.Radiobutton1.configure(variable=self.selectedButton)

        self.Radiobutton2 = tk.Radiobutton(self.Labelframe2)
        self.Radiobutton2.place(x=40, y=70, height=23, width=238
                , bordermode='ignore')
        self.Radiobutton2.configure(activebackground="#f9f9f9")
        self.Radiobutton2.configure(anchor='w')
        self.Radiobutton2.configure(command=demo1_support.on_rbtnClick1)
        self.Radiobutton2.configure(compound='left')
        self.Radiobutton2.configure(justify='left')
        self.Radiobutton2.configure(text='''Radio 2''')
        self.Radiobutton2.configure(value='2')
        self.Radiobutton2.configure(variable=self.selectedButton)

        self.Radiobutton3 = tk.Radiobutton(self.Labelframe2)
        self.Radiobutton3.place(x=40, y=120, height=33, width=228
                , bordermode='ignore')
        self.Radiobutton3.configure(activebackground="#f9f9f9")
        self.Radiobutton3.configure(anchor='w')
        self.Radiobutton3.configure(command=demo1_support.on_rbtnClick2)
        self.Radiobutton3.configure(compound='left')
        photo_location = "./images/RbDotUnselected20.png"
        global _img2
        _img2 = tk.PhotoImage(file=photo_location)
        self.Radiobutton3.configure(image=_img2)
        self.Radiobutton3.configure(indicatoron="0")
        self.Radiobutton3.configure(justify='left')
        self.Radiobutton3.configure(offrelief="flat")
        self.Radiobutton3.configure(padx="5")
        self.Radiobutton3.configure(selectcolor="#d9d9d9")
        photo_location = "./images/RbDotSelected20.png"
        global _img3
        _img3 = tk.PhotoImage(file=photo_location)
        self.Radiobutton3.configure(selectimage=_img3)
        self.Radiobutton3.configure(text='''Radio 3''')
        self.Radiobutton3.configure(value='3')
        self.Radiobutton3.configure(variable=self.selectedButton2)

        self.Radiobutton4 = tk.Radiobutton(self.Labelframe2)
        self.Radiobutton4.place(x=40, y=160, height=33, width=228
                , bordermode='ignore')
        self.Radiobutton4.configure(activebackground="#f9f9f9")
        self.Radiobutton4.configure(anchor='w')
        self.Radiobutton4.configure(command=demo1_support.on_rbtnClick2)
        self.Radiobutton4.configure(compound='left')
        photo_location = "./images/RbDotUnselected20.png"
        global _img4
        _img4 = tk.PhotoImage(file=photo_location)
        self.Radiobutton4.configure(image=_img4)
        self.Radiobutton4.configure(indicatoron="0")
        self.Radiobutton4.configure(justify='left')
        self.Radiobutton4.configure(offrelief="flat")
        self.Radiobutton4.configure(padx="5")
        self.Radiobutton4.configure(selectcolor="#d9d9d9")
        photo_location = "./images/RbDotSelected20.png"
        global _img5
        _img5 = tk.PhotoImage(file=photo_location)
        self.Radiobutton4.configure(selectimage=_img5)
        self.Radiobutton4.configure(text='''Radio 4''')
        self.Radiobutton4.configure(value='4')
        self.Radiobutton4.configure(variable=self.selectedButton2)

        self.Label2 = tk.Label(self.Labelframe2)
        self.Label2.place(x=10, y=230, height=41, width=349, bordermode='ignore')

        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(borderwidth="2")
        self.Label2.configure(compound='left')
        self.Label2.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.Label2.configure(relief="groove")
        self.Label2.configure(text='''Label''')
        self.Label2.configure(textvariable=self.RadioDisplay)
        self.RadioDisplay.set('''Label''')

        self.btnExit = tk.Button(self.top)
        self.btnExit.place(x=790, y=20, height=33, width=93)
        self.btnExit.configure(activebackground="#f9f9f9")
        self.btnExit.configure(borderwidth="2")
        self.btnExit.configure(command=demo1_support.on_btnExit)
        self.btnExit.configure(compound='left')
        self.btnExit.configure(text='''Exit''')

def start_up():
    demo1_support.main()

if __name__ == '__main__':
    demo1_support.main()




